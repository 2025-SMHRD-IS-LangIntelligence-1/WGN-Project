<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smhrd.web.mapper.FeedMapper">

	<insert id="saveFeed" parameterType="t_feed"
		useGeneratedKeys="true" keyProperty="feed_idx">
		INSERT INTO t_feed (mb_id,
		res_idx, feed_content, feed_likes, ratings, created_at)
		VALUES
		(#{mb_id},
		#{res_idx}, #{feed_content}, 0, #{ratings}, NOW())
	</insert>

	<insert id="saveFeedImg">
		INSERT INTO t_feed_img (feed_idx, feed_img_url)
		VALUES
		<foreach collection="imgUrls" item="url" separator=",">
			(#{feed_idx}, #{url})
		</foreach>
	</insert>

	<select id="selectFeedByMemId">
		SELECT f.feed_idx, f.mb_id, f.res_idx,
		f.feed_content, f.feed_likes, f.created_at, m.mb_nick
		FROM t_feed f
		left JOIN t_member m on f.mb_id=m.mb_id
		where f.mb_id=#{mb_id};
	</select>

	<select id="selectFeedByIdx">
		SELECT f.feed_idx, f.mb_id, f.res_idx,
		f.feed_content, f.feed_likes, f.ratings, f.created_at, m.mb_nick
		FROM t_feed f
		left JOIN t_member m on f.mb_id=m.mb_id
		where feed_idx=#{feed_idx};
	</select>

	<resultMap id="CommentDTOMap"
		type="com.smhrd.web.dto.CommentDTO">
		<id property="cmt_idx" column="cmt_idx" />
		<result property="feed_idx" column="feed_idx" />
		<result property="mb_id" column="mb_id" />
		<result property="mb_nick" column="mb_nick" />
		<result property="cmt_content" column="cmt_content" />
		<result property="created_at" column="created_at" />
		<result property="mb_img" column="mb_img" />
	</resultMap>

	<select id="getCmtByfeedIdx" resultMap="CommentDTOMap">
		select c.*, m.mb_img
		from
		t_comment c
		inner join
		t_member m on m.mb_id = c.mb_id
		where
		feed_idx=#{feed_idx}
		order by
		created_at desc;
	</select>

	<resultMap id="CandidateFeedDTO"
		type="com.smhrd.web.dto.CandidateFeedDTO">
		<result property="feed_idx" column="feed_idx" />
		<result property="res_idx" column="res_idx" />
		<result property="feed_likes" column="feed_likes" />
		<result property="res_category" column="res_category" />
		<result property="res_tag" column="res_tag" />
	</resultMap>

	<select id="getCandidateFeed" parameterType="string"
		resultMap="CandidateFeedDTO">
		SELECT
		f.feed_idx,
		r.res_idx,
		f.feed_likes,
		r.res_category,
		r.res_tag
		FROM
		t_feed f
		LEFT JOIN
		t_restaurant r ON r.res_idx = f.res_idx
		WHERE
		f.mb_id != #{mb_id}
	</select>

	<resultMap id="FeedForSearchDTO"
		type="com.smhrd.web.dto.FeedForSearchDTO">
		<result property="feed_idx" column="feed_idx" />
		<result property="feed_likes" column="feed_likes" />
		<result property="res_tag" column="res_tag" />
		<result property="feed_content" column="feed_content" />
	</resultMap>

	<select id="getFeedForSearch" parameterType="string"
		resultMap="FeedForSearchDTO">
		SELECT
		f.feed_idx,
		f.feed_likes,
		r.res_tag,
		f.feed_content
		FROM
		t_feed f
		LEFT JOIN
		t_restaurant r ON r.res_idx = f.res_idx
		WHERE
		f.mb_id
		!= #{mb_id};
	</select>

	<resultMap id="FeedPreviewDTO"
		type="com.smhrd.web.dto.FeedPreviewDTO">
		<result property="feed_idx" column="feed_idx" />
		<result property="mb_id" column="mb_id" />
		<result property="res_idx" column="res_idx" />
		<result property="feed_content" column="feed_content" />
		<result property="feed_likes" column="feed_likes" />
		<result property="created_at" column="created_at" />
		<result property="mb_nick" column="mb_nick" />
		<result property="res_name" column="res_name" />
		<result property="res_category" column="res_category" />
		<result property="comment_count" column="comment_count" />
		<result property="mb_img" column="mb_img" />
	</resultMap>

	<select id="getFeedsByFeedIdx" parameterType="int"
		resultMap="FeedPreviewDTO">
		SELECT
		f.feed_idx,
		f.mb_id,
		f.res_idx,
		f.feed_content,
		f.feed_likes,
		f.created_at,
		m.mb_nick,
		r.res_name,
		r.res_category,
		m.mb_img,
		COUNT(c.cmt_idx) AS comment_count
		FROM t_feed f
		LEFT JOIN
		t_feed_img i ON f.feed_idx = i.feed_idx
		LEFT JOIN t_member m ON f.mb_id
		= m.mb_id
		LEFT JOIN t_restaurant r ON r.res_idx = f.res_idx
		LEFT JOIN
		t_comment c ON f.feed_idx = c.feed_idx -- 댓글 테이블 조인
		WHERE f.feed_idx =
		#{feed_idx}
		GROUP BY
		f.feed_idx, f.mb_id, f.res_idx, f.feed_content,
		f.feed_likes, f.created_at, m.mb_nick,
		r.res_name, r.res_category,
		m.mb_img;
	</select>
	
	
	<update id="updateFeedMeta">
        UPDATE t_feed
        SET feed_content = #{content},
            ratings      = #{ratings},
            created_at   = NOW()
        WHERE feed_idx  = #{feedIdx}
    </update>

    <select id="selectImageUrlsByFeedId" resultType="string">
        SELECT feed_img_url
        FROM t_feed_img
        WHERE feed_idx = #{feedIdx}
        ORDER BY feed_img_idx
    </select>

    <delete id="deleteImagesByFeedId">
        DELETE FROM t_feed_img
        WHERE feed_idx = #{feedIdx}
    </delete>

    <delete id="deleteImagesByUrls">
        DELETE FROM t_feed_img
        WHERE feed_idx = #{feedIdx}
          AND feed_img_url IN
          <foreach collection="deleteUrls" item="u" open="(" separator="," close=")">
              #{u}
          </foreach>
    </delete>

    <insert id="insertFeedImage">
        INSERT INTO t_feed_img (feed_idx, feed_img_url)
        VALUES (#{feedIdx}, #{url})
    </insert>

</mapper>

